#----------------------------------------------------------
# バックテストに使用するStrategyファイル
#
#   現在のサンプルロジックのうち対応しているのは st_mfi です
#
#----------------------------------------------------------

strategy_py:   strategy/st_mfi.py
strategy_yaml: strategy/st_mfi.yaml


optimize:    # strategy.yamlのparametersの中の下記のパラメータを順に変更してバックテストを実施
             # 例) [10,20,2]は10から20未満の範囲を2ずつ増やして評価

#  mfi_period: 42
#  mfi_limit : 12
#  position_slide : [0,100,5]
#  depth : [0,20,1]
  lotsize: [0.01, 0.2, 0.01]

#----------------------------------------------------------
delay: 1.0                                 # 遅延(係数) 1が標準、増やすと遅延増
slipage : 500                              # 成売買でのスリッページ(円)

#----------------------------------------------------------
data_folder: executions/                   # executionがあるフォルダ名を指定 (最後にスラッシュ必要)
execution_files:                           # 読み込む約定履歴を順に記載
  - file: exec-pack_2019-12-14.csv
#  - file: exec-pack_2019-12-15.csv
#  - file: exec-pack_2019-12-16.csv


#----------------------------------------------------------
fix_timescale: false              # グラフプロットの時間軸を正確に時刻換算するか（falseの場合にはX軸は約定回数)
output_files: 'st_mfi.png'        # ''を指定すると画面へプロット

