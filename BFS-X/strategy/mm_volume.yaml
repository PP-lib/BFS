# --------------------------------------------------------------------------------------------------------------------
# Strategy 基本動作の制御パラメータ (strategy.py内に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
parameters:                       # 下記パラメータはself._strategy_config['xxx'] でアクセス

  # 売買高判定の期間(秒)
  volume_period : 20              #

  # エントリー判断の閾値
  volume_th : 2.6                 #

  # 発注後キャンセルまでの時間(秒)
  cancel_time : 10                #

  # 指値を置く位置の指定
  depth : 40                      # 固定幅で指定する指値位置(JPY)

  # 注文頻度を指定
  interval : 0.0                  # 前回エントリーからこの秒数は次のエントリーを保留して、エントリー頻度を制御

  # 1回で出すロット
  lotsize : 0.03                  # エントリーロットサイズ
  max_lot : 0.5                   # 最大ロットサイズ。現在ポジションがこの数値を超える場合には積み増す方向のエントリーを抑制


# --------------------------------------------------------------------------------------------------------------------
# Strategy 基本動作の制御パラメータ (trade.py/backtest.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
timescale : 0                   # 時間足(秒)      0ならローソク足を使わない（生成しない）
numOfCandle: 0                  # ローソク足の数
minutes_to_expire : 1           # 指値の有効期間 (分) 整数
logic_loop_period: 0.1          # ロジックを何秒で回すか


# --------------------------------------------------------------------------------------------------------------------
# ランキングサーバーへ情報を送るためのパラメータ
# --------------------------------------------------------------------------------------------------------------------
#ranking_discord_id      : 000000000000000000  # ご自身のDiscordIDを記入してください ユーザーid確認チャンネル でご自身のユーザーIDを確認してください
#ranking_botname         : 'sample'            # ランキングに送信するボット名（ランキングのグラフ上にプロットされます）
#ranking_report_interval : 5                   # ランキングに損益レポートを送る間隔（分）


# --------------------------------------------------------------------------------------------------------------------
# 急変対策 (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
normal_state : ["NORMAL", "BUSY", "VERY BUSY", "SUPER BUSY"] # オーダーを出しても良いステータス           (NORMAL, BUSY, VERY BUSY, SUPER BUSY から選択)
emergency_state: ["NONE"]                                    # 成り行きでポジションクローズするステータス (NORMAL, BUSY, VERY BUSY, SUPER BUSY から選択)
latency_limit : 10000                                        # websocketの遅延がこの値(msec)以上になったら成り行きでポジションクローズする
emergency_wait : 0                                           # ポジションクローズ後の待ち時間（秒）　(ポジションに反映されるまで時間がかかるので2重発注しないように)


# --------------------------------------------------------------------------------------------------------------------
# ログ関連  (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
log_folder : log-volume/        # log フォルダ名を指定 (最後にスラッシュ必要)
log_level : DEBUG                # DEBUG/INFO/WARNING/ERROR

# --------------------------------------------------------------------------------------------------------------------
# ポジションクローズ　(ポジを解消してから終了させる場合に使用） (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
close_position :  false # 指値をポジションクローズ方向のみの置く
                        # 指値をおく頻度(intervalが短いとclose_positionをtrueにしてもなかなかゼロにならないので注意)


# --------------------------------------------------------------------------------------------------------------------
# 通知機能  (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
profit_discord_webhooks: ''     # 損益履歴通知用 discord webhook
profit_interval : 60            # 損益履歴通知期間(分)
disp_realized_profit : false    # 損益履歴グラフに確定損益も表示させる
disp_position : false           # 損益履歴グラフにポジションも表示させる

position_discord_webhooks: ''   # ポジ履歴通知用 discord webhook
position_interval : 5           # ポジ履歴通知期間(分)
display_normal : 100            # ポジショングラフの背景を変化させる閾値（msec）
display_busy   : 1000           # ポジショングラフの背景を変化させる閾値（msec）
