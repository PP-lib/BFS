# --------------------------------------------------------------------------------------------------------------------
# Strategy 基本動作の制御パラメータ (strategy.py内に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
parameters:                       # 下記パラメータはself._strategy_config['xxx'] でアクセス
  # 1回で出すロット
  lotsize : 0.01                  # エントリーロットサイズ(ロジック名が指定されていないときのデフォルトのロットサイズ)
  max_lot : 1.00                  # 最大ロットサイズ。(ロジック名が指定されていないときのデフォルトのロットサイズ)

  # それぞれのロジックのロットサイズ
  logic_lot :
    # (ロット単位, 許容最大ポジション, SFDモード)の順で記載
                        # SFDモード 0(省略時デフォルト): なにもしない
                        # SFDモード 1 : SFDがsfd_entry_limit以上は新規エントリーしない（クローズ方法はエントリー）
                        #               SFDがsfd_close_limit以上になれば強制ポジションクローズ
    SemutMod          : [0.02, 0.01, 0]  #  (ドテン型はロット単位を最大ポジションの倍に）
    OneRoad1.1_25m_2  : [0.01, 0.01]     # （オンオフ型はロット単位と最大ポジションは同じに）
    kv4.0_30m         : [0.01, 0.01, 1]  #  (複合型はロット単位と最大ポジションは同じに）

  # SFD関連の制限
  sfd_entry_limit : 4.5
  sfd_close_limit : 4.9

  retry_interval : 60

# --------------------------------------------------------------------------------------------------------------------
# Strategy 基本動作の制御パラメータ (trade.py/backtest.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
timescale : 0                   # 時間足(秒)      0ならローソク足を使わない（生成しない）
numOfCandle: 0                  # ローソク足の数
minutes_to_expire : 1           # 指値の有効期間 (分) 整数

# --------------------------------------------------------------------------------------------------------------------
# Discord bot を駆動させる場合のパラメータ
# --------------------------------------------------------------------------------------------------------------------
discord_bot_token : 'NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN'

# --------------------------------------------------------------------------------------------------------------------
# ランキングサーバーへ情報を送るためのパラメータ
# --------------------------------------------------------------------------------------------------------------------
#ranking_discord_id      : 000000000000000000  # ご自身のDiscordIDを記入してください ユーザーid確認チャンネル でご自身のユーザーIDを確認してください
#ranking_botname         : 'sample'            # ランキングに送信するボット名（ランキングのグラフ上にプロットされます）
#ranking_report_interval : 5                   # ランキングに損益レポートを送る間隔（分）

# --------------------------------------------------------------------------------------------------------------------
# 急変対策 (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
normal_state : ["NORMAL", "BUSY", "VERY BUSY", "SUPER BUSY", "FAIL", "STOP", "OTHER"]  # オーダーを出しても良いステータス (NORMAL, BUSY, VERY BUSY, SUPER BUSY から選択)
emergency_state: ["NONE"]                                    # 成り行きでポジションクローズするステータス (NORMAL, BUSY, VERY BUSY, SUPER BUSY から選択)
latency_limit : 1000000                                      # websocketの遅延がこの値(msec)以上になったら成り行きでポジションクローズする
emergency_wait : 5                                           # ポジションクローズ後の待ち時間（秒）　(ポジションに反映されるまで時間がかかるので2重発注しないように)
close_position_while_no_trade : false                        # no_trade期間やAPI制限による非常停止時にポジションをクローズするかどうか

# --------------------------------------------------------------------------------------------------------------------
# ログ関連  (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
log_folder : log-hamutore/         # log フォルダ名を指定 (最後にスラッシュ必要)

# --------------------------------------------------------------------------------------------------------------------
# ポジションクローズ　(ポジを解消してから終了させる場合に使用） (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
close_position :  false # 指値をポジションクローズ方向のみの置く
                        # 指値をおく頻度(intervalが短いとclose_positionをtrueにしてもなかなかゼロにならないので注意)

# --------------------------------------------------------------------------------------------------------------------
# 通知機能  (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
profit_discord_webhooks: 'https://discordapp.com/api/webhooks/999999999999999999/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'     # 損益履歴通知用 discord webhook
profit_interval : 0             # 損益履歴通知期間(分)
disp_realized_profit : false    # 損益履歴グラフに確定損益も表示させる
disp_position : false           # 損益履歴グラフにポジションも表示させる

position_discord_webhooks: 'https://discordapp.com/api/webhooks/999999999999999999/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'   # ポジ履歴通知用 discord webhook
position_interval : 0           # ポジ履歴通知期間(分)
display_normal : 100            # ポジショングラフの背景を変化させる閾値（msec）
display_busy   : 1000           # ポジショングラフの背景を変化させる閾値（msec）
