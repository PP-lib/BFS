# --------------------------------------------------------------------------------------------------------------------
# Strategy 基本動作の制御パラメータ (strategy.py内に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
parameters:                       # 下記パラメータはself._strategy_config['xxx'] でアクセス

# --------------------------------------------------------------------------------------------------------------------
# Strategy 基本動作の制御パラメータ (trade.py/backtest.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
timescale : 60                  # 時間足(秒)      0ならローソク足を使わない（生成しない）
logic_loop_period: 60           # ロジックを何秒で回すか
numOfCandle: 10                 # ローソク足の数
minutes_to_expire : 1           # 指値の有効期間 (分) 整数

# --------------------------------------------------------------------------------------------------------------------
# 急変対策 (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
normal_state : ["NORMAL", "BUSY", "VERY BUSY", "SUPER BUSY", "OTHER", "FAIL"]  # オーダーを出しても良いステータス           (NORMAL, BUSY, VERY BUSY, SUPER BUSY から選択)
emergency_state: ["NONE"]                                    # 成り行きでポジションクローズするステータス (NORMAL, BUSY, VERY BUSY, SUPER BUSY から選択)
latency_limit : 10000                                        # websocketの遅延がこの値(msec)以上になったら成り行きでポジションクローズする
emergency_wait : 0                                           # ポジションクローズ後の待ち時間（秒）　(ポジションに反映されるまで時間がかかるので2重発注しないように)


# --------------------------------------------------------------------------------------------------------------------
# ログ関連  (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
log_folder : log-collateral/        # log フォルダ名を指定 (最後にスラッシュ必要)


# --------------------------------------------------------------------------------------------------------------------
# ポジションクローズ　(ポジを解消してから終了させる場合に使用） (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
close_position :  false  # 指値をポジションクローズ方向のみの置く
                         # 指値をおく頻度(intervalが短いとclose_positionをtrueにしてもなかなかゼロにならないので注意)


# --------------------------------------------------------------------------------------------------------------------
# 通知機能  (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
profit_discord_webhooks: ''     # 損益履歴通知用 discord webhook
profit_interval : 60            # 損益履歴通知期間(分)
disp_realized_profit : false    # 損益履歴グラフに確定損益も表示させる
disp_position : false           # 損益履歴グラフにポジションも表示させる

position_discord_webhooks: 'https://discordapp.com/api/webhooks/000000000000000000/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'   # ポジ履歴通知用 discord webhook
position_interval : 5           # ポジ履歴通知期間(分)
display_normal : 100            # ポジショングラフの背景を変化させる閾値（msec）
display_busy   : 1000           # ポジショングラフの背景を変化させる閾値（msec）
