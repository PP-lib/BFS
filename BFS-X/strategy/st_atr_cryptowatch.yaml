# --------------------------------------------------------------------------------------------------------------------
# Strategy 基本動作の制御パラメータ (strategy.py内に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
parameters:                       # 下記パラメータはself._strategy_config['xxx'] でアクセス
  nATRPeriod : 5
  nATRMultip : 2.5

  buffersize : 10                 # ATR期間の何倍のローソク足を用いて計算するか
                                  # ATRは前の足からの差分で計算する指標であり、前の足の数値の影響を受けるため、十分に長い期間のローソク足が必要
                                  # TradingViewの結果と一致させるには nATRPeriod の10倍程度の本数が計算に必要

  lotsize : 0.1                   # エントリーロットサイズ


# --------------------------------------------------------------------------------------------------------------------
# Strategy 基本動作の制御パラメータ (trade.py/backtest.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
cryptowatch_candle : 120        # CryprtoWatchから取得するローソク足(分)
cryptowatch_numOfCandle : 101   # CryprtoWatchから取得するローソク足の本数 (nATRPeriod x buffersize +1 以上)
fill_nan : true                 # メンテ期間などのデータ抜けを前のキャンドルで補完する

timescale : 0                   # 時間足(秒)  0なら自炊ローソク足を作らない
numOfCandle: 0                  # 内部的に生成して保持するローソク足の数

logic_loop_period: 1            # ロジックを何秒で回すか
minutes_to_expire : 1           # 指値の有効期間 (分) 整数


# --------------------------------------------------------------------------------------------------------------------
# ランキングサーバーへ情報を送るためのパラメータ
# --------------------------------------------------------------------------------------------------------------------
#ranking_discord_id      : 000000000000000000  # ご自身のDiscordIDを記入してください ユーザーid確認チャンネル でご自身のユーザーIDを確認してください
#ranking_botname         : 'sample'            # ランキングに送信するボット名（ランキングのグラフ上にプロットされます）
#ranking_report_interval : 5                   # ランキングに損益レポートを送る間隔（分）


# --------------------------------------------------------------------------------------------------------------------
# 急変対策 (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
normal_state : ["NORMAL", "BUSY", "VERY BUSY", "SUPER BUSY", "OTHER", "FAIL"] # オーダーを出しても良いステータス           (NORMAL, BUSY, VERY BUSY, SUPER BUSY から選択)
emergency_state: ["NONE"]                                    # 成り行きでポジションクローズするステータス (NORMAL, BUSY, VERY BUSY, SUPER BUSY から選択)
latency_limit : 1000000 #スイング系ロジックでは極端に大きくしておくこと！　  # websocketの遅延がこの値(msec)以上になったら成り行きでポジションクローズする
emergency_wait : 60                                          # ポジションクローズ後の待ち時間（秒）　(ポジションに反映されるまで時間がかかるので2重発注しないように)
close_position_while_no_trade : false                        # no_trade期間やAPI制限による非常停止時にポジションをクローズするかどうか


# --------------------------------------------------------------------------------------------------------------------
# ログ関連  (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
log_folder : log-atr-cryptowatch/          # log フォルダ名を指定 (最後にスラッシュ必要)
log_level : DEBUG                # DEBUG/INFO/WARNING/ERROR

# --------------------------------------------------------------------------------------------------------------------
# ポジションクローズ　(ポジを解消してから終了させる場合に使用） (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
close_position :  false # 指値をポジションクローズ方向のみの置く


# --------------------------------------------------------------------------------------------------------------------
# 通知機能  (trade.pyの動作に影響を与えるパラメータ)
# --------------------------------------------------------------------------------------------------------------------
profit_discord_webhooks: ''     # 損益履歴通知用 discord webhook
profit_interval : 60            # 損益履歴通知期間(分)
disp_realized_profit : false    # 損益履歴グラフに確定損益も表示させる
disp_position : false           # 損益履歴グラフにポジションも表示させる

position_discord_webhooks: ''   # ポジ履歴通知用 discord webhook
position_interval : 5           # ポジ履歴通知期間(分)
display_normal : 100            # ポジショングラフの背景を変化させる閾値（msec）
display_busy   : 1000           # ポジショングラフの背景を変化させる閾値（msec）
